@startuml
title Diagrama de Sequencia  - Listar Tarefas Completas
actor Usu치rio
Boundary Frontend
Boundary SpringBoot
Control taskController
Entity Task
Participant taskService
Participant taskRepository
Participant pagedResourcesAssembler
Boundary TypedQuery
Participant Hibernate
Database TodoList
activate SpringBoot
Usu치rio -> Frontend: Listar Tarefas Completas
activate Usu치rio
activate Frontend
activate TodoList
Frontend -> SpringBoot: GET api/tasks/completed
group Roteiro01Application [Spring Boot Java Application]
SpringBoot -> taskController: listCompletedTasks(Pageable, PersistentEntityResourceAssembler)
activate taskController
taskController -> taskService: listCompletedTasks(pageable)
activate taskService
taskService -> taskRepository: findCompleted(pageable)
activate taskRepository
taskRepository -> TypedQuery: getResultList(TaskDto)
group JPA Framework[Hibernate]
Activate TypedQuery
TypedQuery -> Hibernate: List(TaskDto)
Activate Hibernate
Hibernate -> TodoList: SELECT * FROM Tasks WHERE status='COMPLETED'
TodoList --> Hibernate: Table Tasks
Hibernate --> TypedQuery: Table Tasks
TypedQuery --> taskRepository: Page<Tasks>
destroy TypedQuery
end
taskRepository --> taskService: Page<Task>
destroy taskRepository
taskService --> taskController: Page<Task> events
destroy taskService
taskController -> pagedResourcesAssembler: toModel(events, resourceAssembler)
activate pagedResourcesAssembler
pagedResourcesAssembler --> taskController: PagedModel<Task> resource
destroy pagedResourcesAssembler
taskController --> SpringBoot: ResponseEntity<Task> ResponseEntity.ok(resource)
destroy taskController
end
SpringBoot --> Frontend : ResponseEntity<Task> ResponseEntity.ok(resource)
Frontend --> Usu치rio: <list>Task
@enduml
